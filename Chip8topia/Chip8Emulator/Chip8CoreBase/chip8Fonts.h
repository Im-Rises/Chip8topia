#pragma once

#include <binaryLib/binaryLib.h>
#include <array>

// static constexpr const std::array<uint8, 80> CHIP8_FONTSET = {
//     0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
//     0x20, 0x60, 0x20, 0x20, 0x70, // 1
//     0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
//     0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
//     0x90, 0x90, 0xF0, 0x10, 0x10, // 4
//     0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
//     0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
//     0xF0, 0x10, 0x20, 0x40, 0x40, // 7
//     0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
//     0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
//     0xF0, 0x90, 0xF0, 0x90, 0x90, // A
//     0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
//     0xF0, 0x80, 0x80, 0x80, 0xF0, // C
//     0xE0, 0x90, 0x90, 0x90, 0xE0, // D
//     0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
//     0xF0, 0x80, 0xF0, 0x80, 0x80  // F
// };

static constexpr const int FONTSET_SIZE = 180;

static constexpr const std::array<uint8, FONTSET_SIZE> CHIP8_FONTSET = {
    0b11110000,
    0b10010000,
    0b10010000,
    0b10010000,
    0b11110000,

    0b01100000,
    0b00100000,
    0b00100000,
    0b00100000,
    0b01110000,

    0b11110000,
    0b00010000,
    0b11110000,
    0b10000000,
    0b11110000,

    0b11110000,
    0b00010000,
    0b01110000,
    0b00010000,
    0b11110000,

    0b10100000,
    0b10100000,
    0b11110000,
    0b00100000,
    0b00100000,

    0b11110000,
    0b10000000,
    0b11110000,
    0b00010000,
    0b11110000,

    0b11110000,
    0b10000000,
    0b11110000,
    0b10010000,
    0b11110000,

    0b11110000,
    0b00010000,
    0b00010000,
    0b00010000,
    0b00010000,

    0b11110000,
    0b10010000,
    0b11110000,
    0b10010000,
    0b11110000,

    0b11110000,
    0b10010000,
    0b11110000,
    0b00010000,
    0b11110000,

    0b11110000,
    0b10010000,
    0b11110000,
    0b10010000,
    0b10010000,

    0b11110000,
    0b01010000,
    0b01110000,
    0b01010000,
    0b11110000,

    0b11110000,
    0b10000000,
    0b10000000,
    0b10000000,
    0b11110000,

    0b11110000,
    0b01010000,
    0b01010000,
    0b01010000,
    0b11110000,

    0b11110000,
    0b10000000,
    0b11110000,
    0b10000000,
    0b11110000,

    0b11110000,
    0b10000000,
    0b11110000,
    0b10000000,
    0b10000000,

    0b00111100,
    0b01111110,
    0b11100111,
    0b11000011,
    0b11000011,
    0b11000011,
    0b11000011,
    0b11100111,
    0b01111110,
    0b00111100,

    0b00011000,
    0b00111000,
    0b01011000,
    0b00011000,
    0b00011000,
    0b00011000,
    0b00011000,
    0b00011000,
    0b00011000,
    0b00111100,

    0b00111110,
    0b01111111,
    0b11000011,
    0b00000110,
    0b00001100,
    0b00011000,
    0b00110000,
    0b01100000,
    0b11111111,
    0b11111111,

    0b00111100,
    0b01111110,
    0b11000011,
    0b00000011,
    0b00001110,
    0b00001110,
    0b00000011,
    0b11000011,
    0b01111110,
    0b00111100,

    0b00000110,
    0b00001110,
    0b00011110,
    0b00110110,
    0b01100110,
    0b11000110,
    0b11111111,
    0b11111111,
    0b00000110,
    0b00000110,

    0b11111111,
    0b11111111,
    0b11000000,
    0b11000000,
    0b11111100,
    0b11111110,
    0b00000011,
    0b11000011,
    0b01111110,
    0b00111100,

    0b00111110,
    0b01111100,
    0b11100000,
    0b11000000,
    0b11111100,
    0b11111110,
    0b11000011,
    0b11000011,
    0b01111110,
    0b00111100,

    0b11111111,
    0b11111111,
    0b00000011,
    0b00000110,
    0b00001100,
    0b00011000,
    0b00110000,
    0b01100000,
    0b01100000,
    0b01100000,

    0b00111100,
    0b01111110,
    0b11000011,
    0b11000011,
    0b01111110,
    0b01111110,
    0b11000011,
    0b11000011,
    0b01111110,
    0b00111100,

    0b00111100,
    0b01111110,
    0b11000011,
    0b11000011,
    0b01111111,
    0b00111111,
    0b00000011,
    0b00000011,
    0b00111110,
    0b01111100,
};

static constexpr const std::array<uint8, FONTSET_SIZE> SCHIP_FONTSET = {
    0b11110000,
    0b10010000,
    0b10010000,
    0b10010000,
    0b11110000,

    0b00100000,
    0b01100000,
    0b00100000,
    0b00100000,
    0b01110000,

    0b11110000,
    0b00010000,
    0b11110000,
    0b10000000,
    0b11110000,

    0b11110000,
    0b00010000,
    0b01110000,
    0b00010000,
    0b11110000,

    0b10010000,
    0b10010000,
    0b11110000,
    0b00010000,
    0b00010000,

    0b11110000,
    0b10000000,
    0b11110000,
    0b00010000,
    0b11110000,

    0b11110000,
    0b10000000,
    0b11110000,
    0b10010000,
    0b11110000,

    0b11110000,
    0b00010000,
    0b00100000,
    0b01000000,
    0b01000000,

    0b11110000,
    0b10010000,
    0b11110000,
    0b10010000,
    0b11110000,

    0b11110000,
    0b10010000,
    0b11110000,
    0b00010000,
    0b11110000,

    0b11110000,
    0b10010000,
    0b11110000,
    0b10010000,
    0b10010000,

    0b11100000,
    0b10010000,
    0b11100000,
    0b10010000,
    0b11100000,

    0b11110000,
    0b10000000,
    0b10000000,
    0b10000000,
    0b11110000,

    0b11100000,
    0b10010000,
    0b10010000,
    0b10010000,
    0b11100000,

    0b11110000,
    0b10000000,
    0b11110000,
    0b10000000,
    0b11110000,

    0b11110000,
    0b10000000,
    0b11110000,
    0b10000000,
    0b10000000,

    0b00111100,
    0b01111110,
    0b11100111,
    0b11000011,
    0b11000011,
    0b11000011,
    0b11000011,
    0b11100111,
    0b01111110,
    0b00111100,

    0b00011000,
    0b00111000,
    0b01011000,
    0b00011000,
    0b00011000,
    0b00011000,
    0b00011000,
    0b00011000,
    0b00011000,
    0b00111100,

    0b00111110,
    0b01111111,
    0b11000011,
    0b00000110,
    0b00001100,
    0b00011000,
    0b00110000,
    0b01100000,
    0b11111111,
    0b11111111,

    0b00111100,
    0b01111110,
    0b11000011,
    0b00000011,
    0b00001110,
    0b00001110,
    0b00000011,
    0b11000011,
    0b01111110,
    0b00111100,

    0b00000110,
    0b00001110,
    0b00011110,
    0b00110110,
    0b01100110,
    0b11000110,
    0b11111111,
    0b11111111,
    0b00000110,
    0b00000110,

    0b11111111,
    0b11111111,
    0b11000000,
    0b11000000,
    0b11111100,
    0b11111110,
    0b00000011,
    0b11000011,
    0b01111110,
    0b00111100,

    0b00111110,
    0b01111100,
    0b11100000,
    0b11000000,
    0b11111100,
    0b11111110,
    0b11000011,
    0b11000011,
    0b01111110,
    0b00111100,

    0b11111111,
    0b11111111,
    0b00000011,
    0b00000110,
    0b00001100,
    0b00011000,
    0b00110000,
    0b01100000,
    0b01100000,
    0b01100000,

    0b00111100,
    0b01111110,
    0b11000011,
    0b11000011,
    0b01111110,
    0b01111110,
    0b11000011,
    0b11000011,
    0b01111110,
    0b00111100,

    0b00111100,
    0b01111110,
    0b11000011,
    0b11000011,
    0b01111111,
    0b00111111,
    0b00000011,
    0b00000011,
    0b00111110,
    0b01111100,
};

static constexpr const std::array<uint8, FONTSET_SIZE> XO_CHIP_FONTSET = {
    0b01100000,
    0b10010000,
    0b10010000,
    0b10010000,
    0b01100000,

    0b00100000,
    0b01100000,
    0b00100000,
    0b00100000,
    0b01110000,

    0b11100000,
    0b00010000,
    0b01100000,
    0b10000000,
    0b11110000,

    0b11100000,
    0b00010000,
    0b01100000,
    0b00010000,
    0b11100000,

    0b10000000,
    0b10010000,
    0b11110000,
    0b00010000,
    0b00010000,

    0b11110000,
    0b10000000,
    0b11100000,
    0b00010000,
    0b11100000,

    0b01100000,
    0b10000000,
    0b11100000,
    0b10010000,
    0b01100000,

    0b11110000,
    0b00010000,
    0b00100000,
    0b01000000,
    0b01000000,

    0b01100000,
    0b10010000,
    0b01100000,
    0b10010000,
    0b01100000,

    0b01100000,
    0b10010000,
    0b01110000,
    0b00010000,
    0b01100000,

    0b01100000,
    0b10010000,
    0b11110000,
    0b10010000,
    0b10010000,

    0b11100000,
    0b10010000,
    0b11100000,
    0b10010000,
    0b11100000,

    0b01110000,
    0b10000000,
    0b10000000,
    0b10000000,
    0b01110000,

    0b11100000,
    0b10010000,
    0b10010000,
    0b10010000,
    0b11100000,

    0b11110000,
    0b10000000,
    0b11110000,
    0b10000000,
    0b11110000,

    0b11110000,
    0b10000000,
    0b11110000,
    0b10000000,
    0b10000000,

    0b00111100,
    0b01111110,
    0b11100111,
    0b11000011,
    0b11000011,
    0b11000011,
    0b11000011,
    0b11100111,
    0b01111110,
    0b00111100,

    0b00011000,
    0b00111000,
    0b01011000,
    0b00011000,
    0b00011000,
    0b00011000,
    0b00011000,
    0b00011000,
    0b00011000,
    0b00111100,

    0b00111110,
    0b01111111,
    0b11000011,
    0b00000110,
    0b00001100,
    0b00011000,
    0b00110000,
    0b01100000,
    0b11111111,
    0b11111111,

    0b00111100,
    0b01111110,
    0b11000011,
    0b00000011,
    0b00001110,
    0b00001110,
    0b00000011,
    0b11000011,
    0b01111110,
    0b00111100,

    0b00000110,
    0b00001110,
    0b00011110,
    0b00110110,
    0b01100110,
    0b11000110,
    0b11111111,
    0b11111111,
    0b00000110,
    0b00000110,

    0b11111111,
    0b11111111,
    0b11000000,
    0b11000000,
    0b11111100,
    0b11111110,
    0b00000011,
    0b11000011,
    0b01111110,
    0b00111100,

    0b00111110,
    0b01111100,
    0b11100000,
    0b11000000,
    0b11111100,
    0b11111110,
    0b11000011,
    0b11000011,
    0b01111110,
    0b00111100,

    0b11111111,
    0b11111111,
    0b00000011,
    0b00000110,
    0b00001100,
    0b00011000,
    0b00110000,
    0b01100000,
    0b01100000,
    0b01100000,

    0b00111100,
    0b01111110,
    0b11000011,
    0b11000011,
    0b01111110,
    0b01111110,
    0b11000011,
    0b11000011,
    0b01111110,
    0b00111100,

    0b00111100,
    0b01111110,
    0b11000011,
    0b11000011,
    0b01111111,
    0b00111111,
    0b00000011,
    0b00000011,
    0b00111110,
    0b01111100,
};